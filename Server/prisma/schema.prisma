generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Admin {
  id                String         @id @default(uuid())
  name              String
  email             String         @unique
  password          String
  loginAttempts     LoginAttempt[]
  isBlocked         Boolean        @default(false)
  blockedUntil      DateTime?
  refreshTokens     RefreshToken[]
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
}

model LoginAttempt {
  id        String   @id @default(uuid())
  adminId   String
  admin     Admin    @relation(fields: [adminId], references: [id], onDelete: Cascade)
  ipAddress String
  success   Boolean  @default(false)
  createdAt DateTime @default(now())

  @@index([adminId, createdAt])
  @@map("login_attempts")
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  adminId   String
  admin     Admin    @relation(fields: [adminId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([adminId])
  @@map("refresh_tokens")
}

model Blog {
  id           Int       @id @default(autoincrement())
  title        String
  excerpt      String
  content      String
  image        String
  category     String
  tags         String[]   
  author       String
  authorAvatar String
  views        Int        @default(0)
  likes        Int        @default(0)
  comments     Int        @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Project {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  image       String
  category    String
  tags        String[]
  github      String?
  live        String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

