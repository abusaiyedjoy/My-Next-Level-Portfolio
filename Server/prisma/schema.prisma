generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id            Int            @id @default(autoincrement())
  name          String
  title         String
  bio           String
  location      String
  email         String
  phone         String?
  availability  String?

  education     Education[]
  skills        Skill[]
  socialLinks   SocialLinks?
}

model Education {
  id           Int      @id @default(autoincrement())
  degree       String
  institution  String
  year         String
  gpa          String?
  achievements String[]

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Skill {
  id       Int    @id @default(autoincrement())
  name     String
  level    Int    
  years    Float  
  category SkillCategory

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model SocialLinks {
  id       Int     @id @default(autoincrement())
  github   String?
  linkedin String?
  twitter  String?
  portfolio String?

  userId Int   @unique
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum SkillCategory {
  FRONTEND
  BACKEND
  DATABASE
  TOOLS
}


model Blog {
  id           Int       @id @default(autoincrement())
  title        String
  excerpt      String
  content      String
  image        String
  category     String
  tags         String[]   
  author       String
  authorAvatar String
  date         DateTime
  views        Int        @default(0)
  likes        Int        @default(0)
  comments     Int        @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Project {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  image       String
  category    String
  tags        String[]
  github      String?
  live        String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

